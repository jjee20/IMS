<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAMBoAAAJNU0Z0AUkBTAIBAQgB
        AAE4AQABOAEAARABAAEQAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFAAwABMAMAAQEBAAEgBgAB
        MP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AJgADIwEzA0MBdwNDAXcDQwF3A0MBdwNDAXcD
        QwF3A0MBdwNDAXcDQwF3AzQBUxwAAxsBJQNTAaoDWAG7A1gBuwNYAbsDWAG7A1gBuwNYAbsDRgGABAIY
        AAMPARQDQAFvAy0BRhQAAw8BEwM/AW4DLQFGCAADOgFgA1gBuwNbAcgDWQHAA1kBwANZAcADRgGAA0YB
        gANTAacDWQHDA0kBhQNGAYADRgGAA1gBtwNXAbkDOgFgBAADRAF7A0QBeCAAAz8BbgMKAQ0YAANYAbsD
        AAH/AwAB/wMgAfgDRAF5A1EBpAMAAf8DAAH/AwAB/wMzAVEYAANLAY8DPQFoA0MBdgMtAUUQAANMAY4D
        PQFoA0MBdgMtAUUIAANSAaADKgFABAADFwEfA0YBgAQAA0YBgANRAaEDTgGUA00BkwNGAYADRgGAA1MB
        qQNUAasDRgGAAz0BaANEAXgDRAF4BAADQwF3A0MBdwNDAXcDSQGHA0MBdwNDAXcDKwFCAzwBZgMOARIY
        AANZAcwDUwHdA1MB3QNTAd0DUwHdA1MB3QNTAd0DUwHdA1AB3wNAAXAQAANEAXgDQwF3A0kBhwNVAa8D
        PgFqA1UBrgNDAXcDQwF3A0MBdwMkATQDRgGBA1UBrwM+AWoDVQGvA0QBeAQAA1IBoAMqAUADRgGAAyoB
        QANGAYAEAANGAYADPwFtA0kBhwNBAXMDQQFzAzMBUAMSARgDEgEYA0YBgANEAXgDRAF4A0QBeAQAA0QB
        eAgAA0QBeAMyAU8DPAFmA0QBeAM8AWYDDgESGAADRQF8HAADCQEMA0ABcBAAA0YBgANDAXcDSQGGA0gB
        hANMAZADHwEsA0MBdwNDAXcDQwF3A0MBdwNJAYYDSAGEA0wBjgNDAXcDRgGABAADUgGgA0QBeQNXAbwD
        UgGgA0wBkAQAAxkBIgNVAa4DQQFzA0UBfANQAZ0DVwG5A04BlQNWAbMDSQGGA0QBeANEAXgDRAF4BAAD
        SwGPA0MBdwNDAXcDUAGfA0MBdwNVAa8DTQGTAzwBZgMJAQwYAANFAXwMAAMGAQcDOAFdAzwBZgM8AWYD
        PwFtA1MBqQM8AWYDOgFgAwkBDAQAA0YBgCAAA0MBdxAAA0YBgAQAA0kBiANAAXADTgGUAzYBWAMhATAI
        AANGAYAIAAMqAUADUgGgA0YBgQNaAcUDCwEOA0QBeANEAXgDRAF4BAADOgFgA0MBdwNDAXcDQwF3A0MB
        dwNYAbsDRwGCA0kBhRwAA0UBfAwAAzsBZQMjATMDJgE4AyQBNAMNAREDDQERAw0BEQMXAR8DQAFxBAAD
        RgGAIAADRgGAAyQBNAMjATMIAANGAYAEAANGAYADKgFAAyoBQBAAA0YBgANGAYADWQHAAyoBQAM/AW4D
        OAFbAz0BaAQAA0QBeANEAXgDRAF4BAADMQFOAzoBYAM6AWADOgFgAzoBYAM4AVsDNQFWAzABSgMqAUAU
        AAMDAQQDSgGJDAADQAFwAxEBFgM0AVMDMwFQAxkBIgQCCAADQwF2BAADRgGAIAADRgGAAycBOgNQAZoD
        TgGVA0EBcwM/AWwEAANGAYADKgFAAyoBQBAAA0YBgANWAbADWAHQA0wBkAM7AWQDKgFAA0YBgAQAA0QB
        eANEAXgDRAF4BAADFAEbAxkBIgMZASIDGQEiAxkBIgMMAQ8DRgGBAwkBCwNJAYYDAgEDDAADOgFhAzoB
        7wNDAewDVAHeAygBPAQAA0ABcAMZASMDNQFVAzUBVQM1AVUDCQELCAADQwF2BAADRgGAAwgBCgNRAZ4D
        MwFRFAADRgGAA0YBgAQAAz8BbQNEAXsDGQEjBAADRgGAAzYBWANSAaADRgGAA0YBgANGAYADRgGAA0YB
        gANGAYADRgGAA0YBgANSAaADNgFYA0YBgAQAA0QBeANEAXgDRAF4BAADAgEDAx0BKRAAAxIBFwNBAXID
        JAE1Az0BZwMfASwEAAMiATEDDgH8A04BlwM5AV4DUwGqA0UB6QMLAQ4DQAFvAzoB7wM9Ae4DPQHuAz0B
        7gM9Ae4DPQHuAz0B7gNHAYIEAAMRARYDTAGQAxIBFwM/AWwDKQE+EAADRgGAAyUBNgNDAXcDOwFlA0kB
        iAgAA0YBgANHAYIDWAG4A0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgANGAYADWAG4A0cBggNGAYAE
        AANEAXgDRAF4A0QBeAQAAzkBXgNZAb4DBwEJAyoBPwNDAXcDQwF3AycBOgNDAXcDTQGTA1gBugNHAYMD
        EgEXA0QBeQMAAf8DVQGsA0kBiANGAX4DAAH/AywBQwMgAS0DWQHGA1kBzANZAcwDWQHOA0sB5ANZAcwD
        WgHJAygBPAQAAz0BaAMhAS8IAANKAYsDCQEMDAADRgGAA0MBdwNDAXcDQwF3AyYBOQgAA0YBgANAAXAD
        VQHcA1kBwANZAcADWQHAA1kBwANZAcADWQHAA1kBwANZAcADVQHcA0ABcANGAYAEAANEAXgDRAF4A0QB
        eAQAAygBPANXAbwDBgEIAyoBPwNDAXcDQwF3AycBOgM8AWYDWgHEAyABLQNJAYUDRgF9AzwBZgMAAf8D
        PgFqA1MBqgNZAb8DAAH/AyEBMBAAAwkBDANDAXYMAAMPARMDRgF/Aw8BEwM/AW4DLQFEAxMBGQNEAXkM
        AANGAYEYAANGAYAEAAMYASADRgGAA0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgAMYASAEAANGAYAE
        AANEAXgDRAF4A0MBdgQAAz8BbANVAa0EAgMqAT8DQwF3A0MBdwMMARADPAFmAzkBXwMoATwDOgFiA04B
        lwMKAQ0DVAHeA1YB2QNHAYMDTQHlA1YBthQAAwkBDANDAXYMAAM6AWEDGQEjA0wBjgMPARQDOAFbAy0B
        RANIAYQDJQE2A0MBdwNDAXcDNQFWGAADRgGABAADKgFAAyoBQBgAAyoBQAMqAUAEAANGAYAEAANEAXgD
        RAF4Aw0BEQQAAwQBBQMlATcUAAM8AWYDDgESA0oBigNJAYcDTQGTBAADEAEVA0kBhgNZAdIDQQFzAwYB
        BxQAAwkBDANDAXYMAANAAXADDAEPA0cBgwQAAw8BFANAAW8DRgF/KAADSQGHAz0BaQMdASgDRgGAA0YB
        gANGAYADRgGAA0YBgANGAYADRgGAA0YBgAMiATEDRAF7AzsBZAQAA0QBeANGAYADSgGKAxkBIgMZASID
        GQEiAxkBIgMZASIDGQEiAxkBIgMZASIDRgF9AwkBCwMeASsDRgF/A0wBkAwAA1EBoQM8AWYDPAFmAzwB
        ZgM8AWYDPAFmAzwBZgM8AWYDPwFtA0MBdgwAAyMBMwM2AVkDOQFfA0gBhANMAY4DEgEYA0kBhywAAxgB
        IQNEAXsDRAF4AwwBDxAAAw8BEwNCAXQDRwGCAxIBGAgAA0oBiQMYASEDNQFVAzUBVQM1AVUDNQFVAzUB
        VQM1AVUDPAFmA1MBpgM1AVUDJQE3CAADGAEgAwUBBgwAA1gBuwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AzYBWBAAA0ABcAM2AVkDDAEPAx0BKANMAY4DGAEgNAADFgEeA0cBgwNGAX4DDgESAw8B
        EwNCAXQDRwGCAxIBGBAAAycBOgNDAXcDQwF3A0MBdwNDAXcDQwF3A0MBdwNDAXcDPwFuAwwBECQAAxsB
        JgNUAasDWAG7A1gBuwNYAbsDWAG7A1gBuwNYAbsDSAGEAwIBAxQAAyMBMwNAAW8DNgFZAwkBDEAAAxIB
        FwNFAXwDRAF6Aw8BFCQAAwIBAwMnAToDBgEHBAADFQEcAxUBHAQAAwYBBwMnAToDAgEDHAADLQFFA0sB
        jQNVAbEDSQGFA0kBhQNWAbADSwGNAy0BRBAAA0cBggNMAZADSQGGA0cBgwMxAU0DQAFwAy4BSAQBRAAD
        CQELAzoBYQNBAXMDRAF4AyQBNRAAAxABFQNYAb0DTgGVA1sByANOAZUDWAG9A1gBvQNOAZUDWQHHA04B
        lQNXAbwDEAEVEAADHQEoA1ABnAMxAU4DSgGLAyYBOQQAA0QBeQMtAUYDBAEFAzIBTwNQAZwDHAEnCAAD
        WAG7A0sBjwNLAY8DWAG7AzABSwMVARwDNwFaAzoBYgMtAUUDPAFmAzwBZgM8AWYDOAFdAyIBMSgAAyEB
        MANJAYYDOwFkA0MBdwNCAXQDPgFqA0QBewwAAzgBXQM9AWgEAAMGAQcDJwE6AwIBAwMCAQMDJwE6AwYB
        BwQAAz0BZwM4AV0MAAMrAUEDSQGIAwQBBQQAAzMEUAGdAxIBFwMsAUMDSQGIA0YBfgQAAwQBBQNJAYgD
        KgFABAADVwG5AxwBJwMdASgDWQHRCAADDQERA0MBdwMQARUDGQEiAxkBIgMZASIDSgGLA0QBeQNOAZcD
        DAEQCAADDwEUAzgBWwM/AW0DKgFABAIDCQELA0oBiQNHAYMDIAEtAxsBJQMHAQkDRQF8AzkBXgM5AV8I
        AAM6AWADOgFgFAADEwEZAzMBUQMzAVEDHQEoAw4BEggAAx4BKgNHAYMDJgE5A0sBjwNJAYgDSQGIA0cB
        ggMGAQgIAAMpAT4DSQGIA0sBjwMmATkDSQGFAx0BKQMUARsDWQG+Az0BaQNRAaIIAAMNAREDQwF3EAAD
        OAFcA1kBwANNAZIDSQGGBAADOgFgA0cBggM/AWwDQwF3A0ABcANLAYwDQgF0AzoBYQMkATUDKgE/A1UB
        rgM7AWMDAgEDA0YBgQNGAX4IAAM6AWADOgFgAxYBHgMvAUkDPQFnAwMBBANLAY0DWAG9A0QBeQNEAXkD
        WAG9A0oBiwMDAQQEAANOAZcDBQEGAxgBIANJAYcDSQGIAzkBXwwAAzsBZANJAYgDSQGIA0kBhwMXAR8D
        BgEHA04BlwQAA0kBiAQAA0kBiANOAZgDSwGNA1IBoANDAXcYAANZAcwDSgGKAy8BSQNAAXEDSgGJAyMB
        MgMwAUwDKAE7AykBPQNVAawDQwF3BAEDMwFQA1kBzANJAYYDAgEDA0QBeANDAXcIAAM6AWADOgFgDAAD
        SwGNA0QBeAQBA0MBdgNBAXMEAQNEAXgDSgGLBAADUwGpA0oBiwNVAawDTAGQA0kBiANWAbUDTwGZA0kB
        iANJAYgDUwGqA1EBpANJAYgDTAGQA1UBrANKAYsDUgGoBAADSQGIBAADLQFGA0wBkANAAXADTwGZAygB
        PAQAAy4BSAMVARwMAAMrAUEDSQGIA0cBggNGAYADBQEGAzYEWQHAAykBPQMwAUsDUwGmAz4BawMRARYD
        GwElA0kBhwNAAW8EAANEAXsDQAFxCAADOgFgAzoBYAgAAxMBGgNZAb4EAQMmATkDVgGzA1gBvQMkATUE
        AQNYAb0DEgEYA0UBfAMrAUEDQAFwAy4BRwMoATwDOgFhAzMBUQMoATsDKAE7AzMBUQM6AWEDKAE8Ay4B
        RwNAAXADKwFBA0UBfAQAA0kBiAgAA0MBdwMgAS0DBAEFBAADMQFOA1kBwQNWAbUDEQEWDAADSgGKA0QB
        eANDAXcEAAMEAQUDWQG+AysBQgMCAQMDTgGUA0IBdQNJAYcDNQFWAwIBAwMzAVEDLQFEAz0BaANBAXIE
        AAMmATkDUgGgA0QBeAgAAzQBUwNEAXkIAAMdASkDVgGzAygBOwQAA0QBeQMzAVIDRQF8AysBQQMrAUID
        UgGoA0wBkQNVAa8DMwFRAygBOwMoATsDMwFRA1UBrwNMAZEDUgGoAysBQgMrAUEDRQF8BAADSQGICAAD
        QwF3Aw0BEQgAAxgBIANVAa0DVQG0AwwBEAgAAwIBAwNJAYcDRAF6A0QBeAQAA0cBgwNGAYEEAAMMARAD
        WgHFA1QBqwM7AWUDRgF+A0QBeANEAXoDOwFlA0oBiwMKAQ0DJgE5A1gBuANZAcMDUAGcCAADNAFTA0QB
        eQQAAyUBNwNYAbsDKgE/CAADRAF5AzMBUgNCAXQDNwFaA0oBiQNJAYUDAwEEAyABLgNRAaEDUQGhA1EB
        oQNRAaEDIAEuAwMBBANJAYUDSgGJAzcBWgNCAXQEAANJAYgIAANDAXcDDQERCAADPQFpA08BmQM9AWgD
        EwEaCAADMAFKAy4ERwGCA0QBeAMaASQDOAFbA1gBtwMUARsDSwGPAz4BagNEAXkDTgGWA1ABnANJAYYD
        SwGPAz8BbAMJAQsEAAM6AWADOgFgA1ABnANQAZwIAAMTARoDWQG+BAEDKAE8A1UBrwNSAaUDIQEvBAED
        WAG9AxMBGQMJAQsDTgGYAy4BSAwAAw8BFAMtAUUDLQFFAw8BFAwAAy4BSANOAZgDCQELBAADWQHHA0wB
        kQNLAY8DWgHJAw0BEQgAAxABFQNWAbUDSAGEBAEEAAMCAQMDTgGXBAIDFgEeA0sBjwNEAXsDRAF4A0QB
        eQNVAawDQAFvAykBPQMuAUcDRgGBAyQBNQNJAYcDRAF6AxMBGQgAAzoBYAM6AWADUAGcA1ABnAwAA0sB
        jwNEAXgEAQNFAXwDRAF5BAEDRAF4A0sBjQgAAzQBVANVAawDBQEGDAADQAFxA0ABcQwAAwUBBgNVAawD
        NAFUCAADTgGVAz8BbQM9AWcDUQGkAykBPQMjATMIAAMHAQkEAQgAA0IBdQMnAToIAAMZASIDSQGIA0IB
        dANCAXUDSQGHA0UBfAMRARYDUgGlAywBQwMSARgDFwEfA0QBegM9AWcIAAM6AWADOgFgA04BlwNOAZcD
        LQFGA1MBqgMtAUUDAwEEA0sBjwNZAb4DRAF5A0QBeQNZAb4DSwGNAwMBBAQAAw4BEgNOAZcDGQEjA0cB
        gwgAAy0BRQM6AWEDOAFcAzABSggAA0kBhwMbASYDTgGVAxABFQgAAzoBYgMzAVEIAgNYAcsDIgExA0YB
        fgMzAVIDJAE0AzsBZQM7AWUDPAFmAzIBTwgAAxsBJQNDAXcDGAEhAxEBFgNEAXgDQwF2AycBOgNZAc0D
        UwGpAwkBCwMCAQMDQwF3A0MBdwgAAzoBYAM6AWADOgFgAzoBYAMeASoDQAFwAz0BaQMbASUEAAMTARoD
        NAFTAzMBUgMhATADEgEYCAADSgGLAzIBTwNJAYYDOAFcAzEBTgMMARADSgGLA0ABcANAAXADSgGLAwwB
        DwMyAU8DOAFdA0kBhwMyAU8DSgGLCAADNQFVAygBOwMgAS0DDwEUA0oBigNGAX8DWAG9A1MB3QNPAeID
        WAG6A1YB2ANSAagDHgEqCAADEwEaAwgBCgM+AWsDBQEGA0YBfQNHAYIEAANKAYkDFQEdAyQBNQMpAT0D
        PgFrAzYBVwgAAzoBYAM6AWADOgFgAzoBYAMcAScDPAFmAzwBZgMbASYQAAM9AWcDNgFZCAADSAGEA04B
        lgMMARADSQGGA0gBhAMuAUgDPQFpAzgBWwM4AV0DPQFoAy4ERwGDA0kBhgMMAQ8DTgGVA0gBhAgAAzQB
        VANSAagDOgFhA0YBfwNRAaIDSgGJAzMBUgM7AWUDTQGTAzYBVwM0AVQDTAGOEAADMQFNAxkBIgNEAXsD
        PQFoAz0BaANDAXcDFwEfAzsBZQMnAToDRgGBAzMBUQMGAQcIAAMnAToDWAG4A1kB1ANJAYgDPAFmAzwB
        ZgM8AWYDPAFmAzwBZgM8AWYDPAFmAz4BagNZAccDEgEYCAADSwGPA0YBgANOAZQDOQFeAz8BbAMZASID
        RAF4A1ABnANPAZsDRAF5AxgBIQM/AW0DOQFeA04BlANGAX8DTAGOCAADEAEVA04BlQNLAY8DTgGUAy0B
        RgNKAYsDIQEvAwUBBgMWAR4DDwEUA1gBuwMuAUgUAAQCAzUBVQQBA0YBgQNBAXIDQgF1A0MBdwM/AW4D
        SgGKAxABFRAAAyYBOQNJAYgDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM4AVwDEwEZDAAD
        HwEsA0sBjwNIAYQDSQGGAwUBBgQAAzgBXQNKAYkDSgGJAzgBXQQAAwUBBgNJAYYDRwGDA0wBkAMeASsY
        AAMGAQcDVgG2A0wBkQNQAZoDUAGcA00BkgNMAZEoAAMoATsDRAF4A0YBfgM/AWwDDAEPEAABQgFNAT4H
        AAE+AwABKAMAAUADAAEwAwABAQEAAQEFAAGAAQEWAAP/gQABgAEPAeABBwLjAgABnwHnAeABBwLhAZIB
        AAEQAQcB4AEHAYABAAGCAQABFgEHAe8B5wGAAQABggEAARABBwHuAQABvwHeAYMBYAEQAQ8B7gEAAb8B
        xgGPAQEBEAEHAc4BBgG/AcABjwEBARABAwGCAQYBhwHIAYABAQETAcECAAGDAcEBgAEBARADAAGZAcEB
        gAEBARABAAEBAecBAQHfAaABBQEQAQABAwHnAQABHwGnAeUBEwHgAYMB5wERAf8BgAEBAgAB4AEHAQEB
        /wLDAQABDAHgAQcBgQH/AfABDwEAAT8B4AEHAcMB/wH8AT8B4gFHAfABDwEAAv8BgwHAAQMBwQEDAQAB
        AwH/AQEByAETAYgBEQEMAQABwAEAAc8BgwEAAcABDAHwAYABAAHAAQEBAwGAAaAB/AIAAc4BAQIAAaAB
        nAEAAQQBzAMAAbEBDgEgAQABjAHEAgABswEMASQBAAEMAYwCAAGzAQwBAAEBAQwBAAEcATgBgwEIAQAB
        AwEOAQEBjgFxAYEBmQGAAQMBAAEBAQwBMAHAAQEBgAEDAQABgwIAAcABAQGBAQMBAAHzAgABwAEDAcAB
        AwEAAQMCAAHAAQMB4AEHAYABBwEEASAB/AEHAf4BDws=
</value>
  </data>
</root>