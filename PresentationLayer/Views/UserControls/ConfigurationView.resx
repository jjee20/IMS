<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAANBoAAAJNU0Z0AUkBTAIBAQgB
        AAEgAQABIAEAARABAAEQAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFAAwABMAMAAQEBAAEgBgAB
        MP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AJgADIwEzA0MBdwNDAXcDQwF3A0MBdwNDAXcD
        QwF3A0MBdwNDAXcDQwF3AzQBUxwAAxsBJQNRAaoDUQG7A1EBuwNRAbsDUQG7A1EBuwNRAbsDRgGABAIY
        AAMPARQDQAFvAy0BRhQAAw8BEwM/AW4DLQFGCAADOgFgA1EBuwNQAcgDUQHAA1EBwANRAcADRgGAA0YB
        gANRAacDUQHDA0gBhQNGAYADRgGAA1MBtwNRAbkDOgFgBAADRAF7A0QBeCAAAz8BbgMKAQ0YAANRAbsD
        AAH/AwAB/wMXAfgDRAF5A1ABpAMAAf8DAAH/AwAB/wMzAVEYAANLAY8DPQFoA0MBdgMtAUUQAANLAY4D
        PQFoA0MBdgMtAUUIAANQAaADKgFABAADFwEfA0YBgAQAA0YBgANQAaEDTQGUA0wBkwNGAYADRgGAA1AB
        qQNSAasDRgGAAz0BaANEAXgDRAF4BAADQwF3A0MBdwNDAXcDSQGHA0MBdwNDAXcDKwFCAzwBZgMOARIY
        AANNAcwDQgHdA0IB3QNCAd0DQgHdA0IB3QNCAd0DQgHdAz4B3wNAAXAQAANEAXgDQwF3A0kBhwNSAa8D
        PgFqA1IBrgNDAXcDQwF3A0MBdwMkATQDRgGBA1IBrwM+AWoDUgGvA0QBeAQAA1ABoAMqAUADRgGAAyoB
        QANGAYAEAANGAYADPwFtA0kBhwNBAXMDQQFzAzMBUAMSARgDEgEYA0YBgANEAXgDRAF4A0QBeAQAA0QB
        eAgAA0QBeAMyAU8DPAFmA0QBeAM8AWYDDgESGAADRQF8HAADCQEMA0ABcBAAA0YBgANDAXcDSAGGA0gB
        hANLAZADHwEsA0MBdwNDAXcDQwF3A0MBdwNIAYYDSAGEA0sBjgNDAXcDRgGABAADUAGgA0QBeQNRAbwD
        UAGgA0sBkAQAAxkBIgNSAa4DQQFzA0UBfANPAZ0DUQG5A00BlQNRAbMDSAGGA0QBeANEAXgDRAF4BAAD
        SwGPA0MBdwNDAXcDTwGfA0MBdwNSAa8DTAGTAzwBZgMJAQwYAANFAXwMAAMGAQcDOAFdAzwBZgM8AWYD
        PwFtA1ABqQM8AWYDOgFgAwkBDAQAA0YBgCAAA0MBdxAAA0YBgAQAA0kBiANAAXADTQGUAzYBWAMhATAI
        AANGAYAIAAMqAUADUAGgA0YBgQNQAcUDCwEOA0QBeANEAXgDRAF4BAADOgFgA0MBdwNDAXcDQwF3A0MB
        dwNRAbsDRwGCA0gBhRwAA0UBfAwAAzsBZQMjATMDJgE4AyQBNAMNAREDDQERAw0BEQMXAR8DQAFxBAAD
        RgGAIAADRgGAAyQBNAMjATMIAANGAYAEAANGAYADKgFAAyoBQBAAA0YBgANGAYADUQHAAyoBQAM/AW4D
        OAFbAz0BaAQAA0QBeANEAXgDRAF4BAADMQFOAzoBYAM6AWADOgFgAzoBYAM4AVsDNQFWAzABSgMqAUAU
        AAMDAQQDSgGJDAADQAFwAxEBFgM0AVMDMwFQAxkBIgQCCAADQwF2BAADRgGAIAADRgGAAycBOgNPAZoD
        TQGVA0EBcwM/AWwEAANGAYADKgFAAyoBQBAAA0YBgANRAbADTAHQA0sBkAM7AWQDKgFAA0YBgAQAA0QB
        eANEAXgDRAF4BAADFAEbAxkBIgMZASIDGQEiAxkBIgMMAQ8DRgGBAwkBCwNIAYYDAgEDDAADOgFhAygB
        7wMvAewDQgHeAygBPAQAA0ABcAMZASMDNQFVAzUBVQM1AVUDCQELCAADQwF2BAADRgGAAwgBCgNOAZ4D
        MwFRFAADRgGAA0YBgAQAAz8BbQNEAXsDGQEjBAADRgGAAzYBWANQAaADRgGAA0YBgANGAYADRgGAA0YB
        gANGAYADRgGAA0YBgANQAaADNgFYA0YBgAQAA0QBeANEAXgDRAF4BAADAgEDAx0BKRAAAxIBFwNBAXID
        JAE1Az0BZwMfASwEAAMiATEDCAH8A00BlwM5AV4DUQGqAzIB6QMLAQ4DQAFvAygB7wMqAe4DKgHuAyoB
        7gMqAe4DKgHuAyoB7gNHAYIEAAMRARYDSwGQAxIBFwM/AWwDKQE+EAADRgGAAyUBNgNDAXcDOwFlA0kB
        iAgAA0YBgANHAYIDUQG4A0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgANGAYADUQG4A0cBggNGAYAE
        AANEAXgDRAF4A0QBeAQAAzkBXgNSAb4DBwEJAyoBPwNDAXcDQwF3AycBOgNDAXcDTAGTA1IBugNHAYMD
        EgEXA0QBeQMAAf8DUgGsA0kBiANGAX4DAAH/AywBQwMgAS0DTgHGA00BzANNAcwDTgHOAzgB5ANNAcwD
        UAHJAygBPAQAAz0BaAMhAS8IAANKAYsDCQEMDAADRgGAA0MBdwNDAXcDQwF3AyYBOQgAA0YBgANAAXAD
        QwHcA1EBwANRAcADUQHAA1EBwANRAcADUQHAA1EBwANRAcADQwHcA0ABcANGAYAEAANEAXgDRAF4A0QB
        eAQAAygBPANRAbwDBgEIAyoBPwNDAXcDQwF3AycBOgM8AWYDUAHEAyABLQNIAYUDRgF9AzwBZgMAAf8D
        PgFqA1EBqgNRAb8DAAH/AyEBMBAAAwkBDANDAXYMAAMPARMDRgF/Aw8BEwM/AW4DLQFEAxMBGQNEAXkM
        AANGAYEYAANGAYAEAAMYASADRgGAA0YBgANGAYADRgGAA0YBgANGAYADRgGAA0YBgAMYASAEAANGAYAE
        AANEAXgDRAF4A0MBdgQAAz8BbANRAa0EAgMqAT8DQwF3A0MBdwMMARADPAFmAzkBXwMoATwDOgFiA00B
        lwMKAQ0DQgHeA0QB2QNHAYMDOQHlA1EBthQAAwkBDANDAXYMAAM6AWEDGQEjA0sBjgMPARQDOAFbAy0B
        RANIAYQDJQE2A0MBdwNDAXcDNQFWGAADRgGABAADKgFAAyoBQBgAAyoBQAMqAUAEAANGAYAEAANEAXgD
        RAF4Aw0BEQQAAwQBBQMlATcUAAM8AWYDDgESA0oBigNJAYcDTAGTBAADEAEVA0gBhgNKAdIDQQFzAwYB
        BxQAAwkBDANDAXYMAANAAXADDAEPA0cBgwQAAw8BFANAAW8DRgF/KAADSQGHAz0BaQMdASgDRgGAA0YB
        gANGAYADRgGAA0YBgANGAYADRgGAA0YBgAMiATEDRAF7AzsBZAQAA0QBeANGAYADSgGKAxkBIgMZASID
        GQEiAxkBIgMZASIDGQEiAxkBIgMZASIDRgF9AwkBCwMeASsDRgF/A0sBkAwAA1ABoQM8AWYDPAFmAzwB
        ZgM8AWYDPAFmAzwBZgM8AWYDPwFtA0MBdgwAAyMBMwM2AVkDOQFfA0gBhANLAY4DEgEYA0kBhywAAxgB
        IQNEAXsDRAF4AwwBDxAAAw8BEwNCAXQDRwGCAxIBGAgAA0oBiQMYASEDNQFVAzUBVQM1AVUDNQFVAzUB
        VQM1AVUDPAFmA1ABpgM1AVUDJQE3CAADGAEgAwUBBgwAA1EBuwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AzYBWBAAA0ABcAM2AVkDDAEPAx0BKANLAY4DGAEgNAADFgEeA0cBgwNGAX4DDgESAw8B
        EwNCAXQDRwGCAxIBGBAAAycBOgNDAXcDQwF3A0MBdwNDAXcDQwF3A0MBdwNDAXcDPwFuAwwBECQAAxsB
        JgNSAasDUQG7A1EBuwNRAbsDUQG7A1EBuwNRAbsDSAGEAwIBAxQAAyMBMwNAAW8DNgFZAwkBDEAAAxIB
        FwNFAXwDRAF6Aw8BFCQAAwIBAwMnAToDBgEHBAADFQEcAxUBHAQAAwYBBwMnAToDAgEDHAADLQFFA0oB
        jQNSAbEDSAGFA0gBhQNRAbADSgGNAy0BRBAAA0cBggNLAZADSAGGA0cBgwMxAU0DQAFwAy4BSAQBRAAD
        CQELAzoBYQNBAXMDRAF4AyQBNRAAAxABFQNSAb0DTQGVA1AByANNAZUDUgG9A1IBvQNNAZUDTwHHA00B
        lQNRAbwDEAEVEAADHQEoA04BnAMxAU4DSgGLAyYBOQQAA0QBeQMtAUYDBAEFAzIBTwNOAZwDHAEnCAAD
        UQG7A0sBjwNLAY8DUQG7AzABSwMVARwDNwFaAzoBYgMtAUUDPAFmAzwBZgM8AWYDOAFdAyIBMSgAAyEB
        MANIAYYDOwFkA0MBdwNCAXQDPgFqA0QBewwAAzgBXQM9AWgEAAMGAQcDJwE6AwIBAwMCAQMDJwE6AwYB
        BwQAAz0BZwM4AV0MAAMrAUEDSQGIAwQBBQQAAzMBUANPAZ0DEgEXAywBQwNJAYgDRgF+BAADBAEFA0kB
        iAMqAUAEAANRAbkDHAEnAx0BKANLAdEIAAMNAREDQwF3AxABFQMZASIDGQEiAxkBIgNKAYsDRAF5A00B
        lwMMARAIAAMPARQDOAFbAz8BbQMqAUAEAgMJAQsDSgGJA0cBgwMgAS0DGwElAwcBCQNFAXwDOQFeAzkB
        XwgAAzoBYAM6AWAUAAMTARkDMwFRAzMBUQMdASgDDgESCAADHgEqA0cBgwMmATkDSwGPA0kBiANJAYgD
        RwGCAwYBCAgAAykBPgNJAYgDSwGPAyYBOQNIAYUDHQEpAxQBGwNSAb4DPQFpA08BoggAAw0BEQNDAXcQ
        AAM4AVwDUQHAA0wBkgNIAYYEAAM6AWADRwGCAz8BbANDAXcDQAFwA0oBjANCAXQDOgFhAyQBNQMqAT8D
        UgGuAzsBYwMCAQMDRgGBA0YBfggAAzoBYAM6AWADFgEeAy8BSQM9AWcDAwEEA0oBjQNSAb0DRAF5A0QB
        eQNSAb0DSgGLAwMBBAQAA00BlwMFAQYDGAEgA0kBhwNJAYgDOQFfDAADOwFkA0kBiANJAYgDSQGHAxcB
        HwMGAQcDTQGXBAADSQGIBAADSQGIA00BmANKAY0DUAGgA0MBdxgAA00BzANKAYoDLwFJA0ABcQNKAYkD
        IwEyAzABTAMoATsDKQE9A1IBrANDAXcEAQMzAVADTQHMA0gBhgMCAQMDRAF4A0MBdwgAAzoBYAM6AWAM
        AANKAY0DRAF4BAEDQwF2A0EBcwQBA0QBeANKAYsEAANQAakDSgGLA1IBrANLAZADSQGIA1EBtQNNAZkD
        SQGIA0kBiANRAaoDUAGkA0kBiANLAZADUgGsA0oBiwNRAagEAANJAYgEAAMtAUYDSwGQA0ABcANNAZkD
        KAE8BAADLgFIAxUBHAwAAysBQQNJAYgDRwGCA0YBgAMFAQYDNgFZA1EBwAMpAT0DMAFLA1ABpgM+AWsD
        EQEWAxsBJQNJAYcDQAFvBAADRAF7A0ABcQgAAzoBYAM6AWAIAAMTARoDUgG+BAEDJgE5A1EBswNSAb0D
        JAE1BAEDUgG9AxIBGANFAXwDKwFBA0ABcAMuAUcDKAE8AzoBYQMzAVEDKAE7AygBOwMzAVEDOgFhAygB
        PAMuAUcDQAFwAysBQQNFAXwEAANJAYgIAANDAXcDIAEtAwQBBQQAAzEBTgNPAcEDUQG1AxEBFgwAA0oB
        igNEAXgDQwF3BAADBAEFA1IBvgMrAUIDAgEDA00BlANCAXUDSQGHAzUBVgMCAQMDMwFRAy0BRAM9AWgD
        QQFyBAADJgE5A1ABoANEAXgIAAM0AVMDRAF5CAADHQEpA1EBswMoATsEAANEAXkDMwFSA0UBfAMrAUED
        KwFCA1EBqANMAZEDUgGvAzMBUQMoATsDKAE7AzMBUQNSAa8DTAGRA1EBqAMrAUIDKwFBA0UBfAQAA0kB
        iAgAA0MBdwMNAREIAAMYASADUQGtA1IBtAMMARAIAAMCAQMDSQGHA0QBegNEAXgEAANHAYMDRgGBBAAD
        DAEQA1ABxQNSAasDOwFlA0YBfgNEAXgDRAF6AzsBZQNKAYsDCgENAyYBOQNRAbgDUQHDA04BnAgAAzQB
        UwNEAXkEAAMlATcDUQG7AyoBPwgAA0QBeQMzAVIDQgF0AzcBWgNKAYkDSAGFAwMBBAMgAS4DUAGhA1AB
        oQNQAaEDUAGhAyABLgMDAQQDSAGFA0oBiQM3AVoDQgF0BAADSQGICAADQwF3Aw0BEQgAAz0BaQNNAZkD
        PQFoAxMBGggAAzABSgMuBEcBggNEAXgDGgEkAzgBWwNTAbcDFAEbA0sBjwM+AWoDRAF5A00BlgNOAZwD
        SAGGA0sBjwM/AWwDCQELBAADOgFgAzoBYANOAZwDTgGcCAADEwEaA1IBvgQBAygBPANSAa8DUAGlAyEB
        LwQBA1IBvQMTARkDCQELA00BmAMuAUgMAAMPARQDLQFFAy0BRQMPARQMAAMuAUgDTQGYAwkBCwQAA08B
        xwNMAZEDSwGPA1AByQMNAREIAAMQARUDUQG1A0gBhAQBBAADAgEDA00BlwQCAxYBHgNLAY8DRAF7A0QB
        eANEAXkDUgGsA0ABbwMpAT0DLgFHA0YBgQMkATUDSQGHA0QBegMTARkIAAM6AWADOgFgA04BnANOAZwM
        AANLAY8DRAF4BAEDRQF8A0QBeQQBA0QBeANKAY0IAAM0AVQDUgGsAwUBBgwAA0ABcQNAAXEMAAMFAQYD
        UgGsAzQBVAgAA00BlQM/AW0DPQFnA1ABpAMpAT0DIwEzCAADBwEJBAEIAANCAXUDJwE6CAADGQEiA0kB
        iANCAXQDQgF1A0kBhwNFAXwDEQEWA1ABpQMsAUMDEgEYAxcBHwNEAXoDPQFnCAADOgFgAzoBYANNAZcD
        TQGXAy0BRgNRAaoDLQFFAwMBBANLAY8DUgG+A0QBeQNEAXkDUgG+A0oBjQMDAQQEAAMOARIDTQGXAxkB
        IwNHAYMIAAMtAUUDOgFhAzgBXAMwAUoIAANJAYcDGwEmA00BlQMQARUIAAM6AWIDMwFRCAIDTgHLAyIB
        MQNGAX4DMwFSAyQBNAM7AWUDOwFlAzwBZgMyAU8IAAMbASUDQwF3AxgBIQMRARYDRAF4A0MBdgMnAToD
        TQHNA1ABqQMJAQsDAgEDA0MBdwNDAXcIAAM6AWADOgFgAzoBYAM6AWADHgEqA0ABcAM9AWkDGwElBAAD
        EwEaAzQBUwMzAVIDIQEwAxIBGAgAA0oBiwMyAU8DSAGGAzgBXAMxAU4DDAEQA0oBiwNAAXADQAFwA0oB
        iwMMAQ8DMgFPAzgBXQNJAYcDMgFPA0oBiwgAAzUBVQMoATsDIAEtAw8BFANKAYoDRgF/A1IBvQNCAd0D
        PAHiA1IBugNHAdgDUQGoAx4BKggAAxMBGgMIAQoDPgFrAwUBBgNGAX0DRwGCBAADSgGJAxUBHQMkATUD
        KQE9Az4BawM2AVcIAAM6AWADOgFgAzoBYAM6AWADHAEnAzwBZgM8AWYDGwEmEAADPQFnAzYBWQgAA0gB
        hANNAZYDDAEQA0gBhgNIAYQDLgFIAz0BaQM4AVsDOAFdAz0BaAMuBEcBgwNIAYYDDAEPA00BlQNIAYQI
        AAM0AVQDUQGoAzoBYQNGAX8DTwGiA0oBiQMzAVIDOwFlA0wBkwM2AVcDNAFUA0sBjhAAAzEBTQMZASID
        RAF7Az0BaAM9AWgDQwF3AxcBHwM7AWUDJwE6A0YBgQMzAVEDBgEHCAADJwE6A1EBuANKAdQDSQGIAzwB
        ZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM+AWoDTwHHAxIBGAgAA0sBjwNGAYADTQGUAzkBXgM/AWwD
        GQEiA0QBeANOAZwDTgGbA0QBeQMYASEDPwFtAzkBXgNNAZQDRgF/A0sBjggAAxABFQNNAZUDSwGPA00B
        lAMtAUYDSgGLAyEBLwMFAQYDFgEeAw8BFANRAbsDLgFIFAAEAgM1AVUEAQNGAYEDQQFyA0IBdQNDAXcD
        PwFuA0oBigMQARUQAAMmATkDSQGIAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDOAFcAxMB
        GQwAAx8BLANLAY8DSAGEA0gBhgMFAQYEAAM4AV0DSgGJA0oBiQM4AV0EAAMFAQYDSAGGA0cBgwNLAZAD
        HgErGAADBgEHA1EBtgNMAZEDTwGaA04BnANMAZIDTAGRKAADKAE7A0QBeANGAX4DPwFsAwwBDxAAAUIB
        TQE+BwABPgMAASgDAAFAAwABMAMAAQEBAAEBBQABgAEBFgAD/4EAAYABDwHgAQcC4wIAAZ8B5wHgAQcC
        4QGSAQABEAEHAeABBwGAAQABggEAARYBBwHvAecBgAEAAYIBAAEQAQcB7gEAAb8B3gGDAWABEAEPAe4B
        AAG/AcYBjwEBARABBwHOAQYBvwHAAY8BAQEQAQMBggEGAYcByAGAAQEBEwHBAgABgwHBAYABAQEQAwAB
        mQHBAYABAQEQAQABAQHnAQEB3wGgAQUBEAEAAQMB5wEAAR8BpwHlARMB4AGDAecBEQH/AYABAQIAAeAB
        BwEBAf8CwwEAAQwB4AEHAYEB/wHwAQ8BAAE/AeABBwHDAf8B/AE/AeIBRwHwAQ8BAAL/AYMBwAEDAcEB
        AwEAAQMB/wEBAcgBEwGIAREBDAEAAcABAAHPAYMBAAHAAQwB8AGAAQABwAEBAQMBgAGgAfwCAAHOAQEC
        AAGgAZwBAAEEAcwDAAGxAQ4BIAEAAYwBxAIAAbMBDAEkAQABDAGMAgABswEMAQABAQEMAQABHAE4AYMB
        CAEAAQMBDgEBAY4BcQGBAZkBgAEDAQABAQEMATABwAEBAYABAwEAAYMCAAHAAQEBgQEDAQAB8wIAAcAB
        AwHAAQMBAAEDAgABwAEDAeABBwGAAQcBBAEgAfwBBwH+AQ8L
</value>
  </data>
</root>